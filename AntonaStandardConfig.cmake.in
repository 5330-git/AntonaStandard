# 本文件首先被用户调用find_package 搜索到，用于在安装路径下寻找具体的组件

set(ROOT_PREJECT_NAME AntonaStandard)
set(ROOT_PREJECT_VERSION ${AntonaStandard_VERSION})

# 打印信息
message(STATUS "Require Project Name  : ${ROOT_PREJECT_NAME}")
message(STATUS "Require Project Version : ${ROOT_PREJECT_VERSION}")
message(STATUS "Require Project Components : ${${ROOT_PREJECT_NAME}_FIND_COMPONENTS}")

# 设置用户调用find_package 时的参数
set(_PROJECT_FIND_COMPONETS_REQUIRED)
if(${ROOT_PREJECT_NAME}_FIND_REQUIRED)
    set(_PROJECT_FIND_COMPONETS_REQUIRED REQUIRED)
endif()

set(_PROJECT_FIND_COMPONENTS_QUIET)
if(${ROOT_PREJECT_NAME}_FIND_QUIETLY)
    set(_PROJECT_FIND_COMPONENTS_QUIET QUIET)
endif()

# 遍历需要查找的组件名，依次调用find_package查找
foreach(component_name ${${ROOT_PREJECT_NAME}_FIND_COMPONENTS})
    message(STATUS "Finding Component : ${component_name} at ${CMAKE_PREFIX_PATH}")
    find_package(
        ${ROOT_PREJECT_NAME}-${component_name}
        ${ROOT_PROJECT_VERSION}
        ${_PROJECT_FIND_COMPONENTS_QUIET}
        ${_PROJECT_FIND_COMPONETS_REQUIRED}
        PATHS ${CMAKE_CURRENT_LIST_DIR}/../
    )
message(STATUS "finished_find")
    # 检查是否找打组件，分别打印信息
    if(NOT ${ROOT_PREJECT_NAME}-${component_name}_FOUND)
        message(STATUS "Can't find ${component_name}")
    else()
        message(STATUS "Found ${component_name}")
        # 将找到的组件加入根项目存储库文件的变量中
        list(APPEND ${ROOT_PREJECT_NAME}_LIBRARIES "${ROOT_PREJECT_NAME}::${component_name}")
    endif()
endforeach()

# 打印找到的组件
message(STATUS "Find ${ROOT_PREJECT_NAME} Components : ${${ROOT_PREJECT_NAME}_LIBRARIES}")
